"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[392],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,b=u["".concat(i,".").concat(m)]||u[m]||d[m]||o;return n?r.createElement(b,s(s({ref:t},c),{},{components:n})):r.createElement(b,s({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5345:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={id:"block-endpoint-edit-default-role",title:"Block Endpoint Edit Default Role"},s="Block Endpoint Edit Default Role",l={unversionedId:"block-endpoint-edit-default-role",id:"block-endpoint-edit-default-role",title:"Block Endpoint Edit Default Role",description:"Description",source:"@site/docs/block-endpoint-edit-default-role.md",sourceDirName:".",slug:"/block-endpoint-edit-default-role",permalink:"/gatekeeper-library/website/block-endpoint-edit-default-role",draft:!1,editUrl:"https://github.com/open-policy-agent/gatekeeper-library/edit/master/website/docs/block-endpoint-edit-default-role.md",tags:[],version:"current",frontMatter:{id:"block-endpoint-edit-default-role",title:"Block Endpoint Edit Default Role"},sidebar:"docs",previous:{title:"Automount Service Account Token for Pod",permalink:"/gatekeeper-library/website/automount-serviceaccount-token"},next:{title:"Block Services with type LoadBalancer",permalink:"/gatekeeper-library/website/block-loadbalancer-services"}},i={},p=[{value:"Description",id:"description",level:2},{value:"Template",id:"template",level:2},{value:"Usage",id:"usage",level:3},{value:"Examples",id:"examples",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"block-endpoint-edit-default-role"},"Block Endpoint Edit Default Role"),(0,a.kt)("h2",{id:"description"},"Description"),(0,a.kt)("p",null,"Many Kubernetes installations by default have a system:aggregate-to-edit ClusterRole which does not properly restrict access to editing Endpoints. This ConstraintTemplate forbids the system:aggregate-to-edit ClusterRole from granting permission to create/patch/update Endpoints.\nClusterRole/system:aggregate-to-edit should not allow Endpoint edit permissions due to CVE-2021-25740, Endpoint & EndpointSlice permissions allow cross-Namespace forwarding, ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/kubernetes/kubernetes/issues/103675"},"https://github.com/kubernetes/kubernetes/issues/103675")),(0,a.kt)("h2",{id:"template"},"Template"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: templates.gatekeeper.sh/v1\nkind: ConstraintTemplate\nmetadata:\n  name: k8sblockendpointeditdefaultrole\n  annotations:\n    metadata.gatekeeper.sh/title: "Block Endpoint Edit Default Role"\n    description: >-\n      Many Kubernetes installations by default have a system:aggregate-to-edit\n      ClusterRole which does not properly restrict access to editing Endpoints.\n      This ConstraintTemplate forbids the system:aggregate-to-edit ClusterRole\n      from granting permission to create/patch/update Endpoints.\n\n      ClusterRole/system:aggregate-to-edit should not allow\n      Endpoint edit permissions due to CVE-2021-25740, Endpoint & EndpointSlice\n      permissions allow cross-Namespace forwarding,\n      https://github.com/kubernetes/kubernetes/issues/103675\nspec:\n  crd:\n    spec:\n      names:\n        kind: K8sBlockEndpointEditDefaultRole\n  targets:\n    - target: admission.k8s.gatekeeper.sh\n      rego: |\n        package k8sblockendpointeditdefaultrole\n\n        violation[{"msg": msg}] {\n            input.review.object.metadata.name == "system:aggregate-to-edit"\n            endpointRule(input.review.object.rules[_])\n            msg := "ClusterRole system:aggregate-to-edit should not allow endpoint edit permissions. For k8s version < 1.22, the Cluster Role should be annotated with rbac.authorization.kubernetes.io/autoupdate=false to prevent autoreconciliation back to default permissions for this role."\n        }\n\n        endpointRule(rule) {\n            "endpoints" == rule.resources[_]\n            hasEditVerb(rule.verbs)\n        }\n\n        hasEditVerb(verbs) {\n            "create" == verbs[_]\n        }\n\n        hasEditVerb(verbs) {\n            "patch" == verbs[_]\n        }\n\n        hasEditVerb(verbs) {\n            "update" == verbs[_]\n        }\n\n')),(0,a.kt)("h3",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/block-endpoint-edit-default-role/template.yaml\n")),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("details",null,(0,a.kt)("summary",null,"block-endpoint-default-role"),(0,a.kt)("blockquote",null,(0,a.kt)("details",null,(0,a.kt)("summary",null,"constraint"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: constraints.gatekeeper.sh/v1beta1\nkind: K8sBlockEndpointEditDefaultRole\nmetadata:\n  name: block-endpoint-edit-default-role\nspec:\n  match:\n    kinds:\n      - apiGroups: ["rbac.authorization.k8s.io"]\n        kinds: ["ClusterRole"]\n\n')),(0,a.kt)("p",null,"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/block-endpoint-edit-default-role/samples/block-endpoint-edit-default-role/constraint.yaml\n"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"example-allowed"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: "true"\n  creationTimestamp: null\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n    rbac.authorization.k8s.io/aggregate-to-edit: "true"\n  name: system:aggregate-to-edit\nrules:\n- apiGroups:\n  - ""\n  resources:\n  - pods/attach\n  - pods/exec\n  - pods/portforward\n  - pods/proxy\n  - secrets\n  - services/proxy\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - ""\n  resources:\n  - serviceaccounts\n  verbs:\n  - impersonate\n- apiGroups:\n  - ""\n  resources:\n  - pods\n  - pods/attach\n  - pods/exec\n  - pods/portforward\n  - pods/proxy\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - ""\n  resources:\n  - configmaps\n  - persistentvolumeclaims\n  - replicationcontrollers\n  - replicationcontrollers/scale\n  - secrets\n  - serviceaccounts\n  - services\n  - services/proxy\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - apps\n  resources:\n  - daemonsets\n  - deployments\n  - deployments/rollback\n  - deployments/scale\n  - replicasets\n  - replicasets/scale\n  - statefulsets\n  - statefulsets/scale\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - autoscaling\n  resources:\n  - horizontalpodautoscalers\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - batch\n  resources:\n  - cronjobs\n  - jobs\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - extensions\n  resources:\n  - daemonsets\n  - deployments\n  - deployments/rollback\n  - deployments/scale\n  - ingresses\n  - networkpolicies\n  - replicasets\n  - replicasets/scale\n  - replicationcontrollers/scale\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - policy\n  resources:\n  - poddisruptionbudgets\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - networking.k8s.io\n  resources:\n  - ingresses\n  - networkpolicies\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n\n')),(0,a.kt)("p",null,"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/block-endpoint-edit-default-role/samples/block-endpoint-edit-default-role/constraint.yaml\n"))),(0,a.kt)("details",null,(0,a.kt)("summary",null,"example-disallowed"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRole\nmetadata:\n  annotations:\n    rbac.authorization.kubernetes.io/autoupdate: "true"\n  creationTimestamp: null\n  labels:\n    kubernetes.io/bootstrapping: rbac-defaults\n    rbac.authorization.k8s.io/aggregate-to-edit: "true"\n  name: system:aggregate-to-edit\nrules:\n- apiGroups:\n  - ""\n  resources:\n  - pods/attach\n  - pods/exec\n  - pods/portforward\n  - pods/proxy\n  - secrets\n  - services/proxy\n  verbs:\n  - get\n  - list\n  - watch\n- apiGroups:\n  - ""\n  resources:\n  - serviceaccounts\n  verbs:\n  - impersonate\n- apiGroups:\n  - ""\n  resources:\n  - pods\n  - pods/attach\n  - pods/exec\n  - pods/portforward\n  - pods/proxy\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - ""\n  resources:\n  - configmaps\n  - persistentvolumeclaims\n  - replicationcontrollers\n  - replicationcontrollers/scale\n  - secrets\n  - serviceaccounts\n  - services\n  - services/proxy\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n- apiGroups:\n  - apps\n  resources:\n  - daemonsets\n  - deployments\n  - deployments/rollback\n  - deployments/scale\n  - endpoints\n  - replicasets\n  - replicasets/scale\n  - statefulsets\n  - statefulsets/scale\n  verbs:\n  - create\n  - delete\n  - deletecollection\n  - patch\n  - update\n\n')),(0,a.kt)("p",null,"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"kubectl apply -f https://raw.githubusercontent.com/open-policy-agent/gatekeeper-library/master/library/general/block-endpoint-edit-default-role/samples/block-endpoint-edit-default-role/constraint.yaml\n"))))))}d.isMDXComponent=!0}}]);